{"version":3,"sources":["uni-app:///static/js/time.js"],"names":["getHoroscope","date","c","Date","month","getMonth","day","getDate","startMonth","charAt","sumAge","data","dateBegin","replace","dateEnd","dateDiff","getTime","dayDiff","Math","floor","leave1","hours","leave2","leave3","round","getChatTime","v1","v2","toString","length","parseInt","this","gettime","ISO8601DateStr2Date","string","time","shorttime","now","cha","dateFormat","parseNumber","num","formatStr","dateObj","rStr","mons","getFullYear","getHours","getMinutes","getSeconds","test","RegExp","$1","getAgeByBirthday","birthday","d"],"mappings":"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","file":"chat/common/vendor.js","sourcesContent":["export default{\r\n\t// 计算当前日期星座\r\n\tgetHoroscope(date) {\r\n\t  let c = ['摩羯','水瓶','双鱼','白羊','金牛','双子','巨蟹','狮子','处女','天秤','天蝎','射手','摩羯']\r\n\t  date=new Date(date);\r\n\t  let month = date.getMonth() + 1;\r\n\t  let day = date.getDate();\r\n\t  let startMonth = month - (day - 14 < '865778999988'.charAt(month));\r\n\t  return c[startMonth]+'座';\r\n\t},\r\n\t// 计算指定时间与当前的时间差\r\n\tsumAge(data){\r\n\t\tlet dateBegin = new Date(data.replace(/-/g, \"/\"));\r\n\t\tlet dateEnd = new Date();//获取当前时间\r\n\t\tlet dateDiff = dateEnd.getTime() - dateBegin.getTime();//时间差的毫秒数\r\n\t\tlet dayDiff = Math.floor(dateDiff / (24 * 3600 * 1000));//计算出相差天数\r\n\t\tlet leave1=dateDiff%(24*3600*1000)    //计算天数后剩余的毫秒数\r\n\t\tlet hours=Math.floor(leave1/(3600*1000))//计算出小时数\r\n\t\t//计算相差分钟数\r\n\t\tlet leave2=leave1%(3600*1000)    //计算小时数后剩余的毫秒数\r\n\t\tlet minutes=Math.floor(leave2/(60*1000))//计算相差分钟数\r\n\t\t//计算相差秒数\r\n\t\tlet leave3=leave2%(60*1000)      //计算分钟数后剩余的毫秒数\r\n\t\tlet seconds=Math.round(leave3/1000)\r\n\t\treturn dayDiff+\"天 \"+hours+\"小时 \";\r\n\t},\r\n\t// 获取聊天时间（相差300s内的信息不会显示时间）\r\n\tgetChatTime(v1,v2){\r\n\t\tv1=v1.toString().length<13 ? v1*1000 : v1;\r\n\t\tv2=v2.toString().length<13 ? v2*1000 : v2;\r\n\t\tif(((parseInt(v1)-parseInt(v2))/1000) > 300){\r\n\t\t\treturn this.gettime(v1);\r\n\t\t}\r\n\t},\r\n\tISO8601DateStr2Date(string) {\r\n\t\t// let time =\"2021-12-15T17:59:50\"\r\n\t\t// time=time.replace(\"T\",\" \");\r\n\t\t// let yy=new Date(time)\r\n\t\t// let time1 = yy.getTime();    \r\n\t\t// console.log(time,yy,time1)\r\n\t\tif (string) {\r\n\t\r\n\t\t\t\tlet time=string.replace(\"T\",\" \")\r\n\t\tlet date=new Date(time)\r\n\t\treturn date.getTime()\t\t\r\n\t\r\n\t\t}else{\r\n\t\t\treturn null\r\n\t\t}\r\n\t},\r\n\t// 人性化时间格式\r\n\tgettime(shorttime){\r\n\t\tshorttime=shorttime.toString().length<13 ? shorttime*1000 : shorttime;\r\n\t\tlet now = (new Date()).getTime();\r\n\t\tlet cha = (now-parseInt(shorttime))/1000;\r\n\t\t\r\n\t\tif (cha < 43200) {\r\n\t\t\t// 当天\r\n\t\t\treturn this.dateFormat(new Date(shorttime),\"{A} {t}:{ii}\");\r\n\t\t} else if(cha < 518400){\r\n\t\t\t// 隔天 显示日期+时间\r\n\t\t\treturn this.dateFormat(new Date(shorttime),\"{Mon}月{DD}日 {A} {t}:{ii}\");\r\n\t\t} else {\r\n\t\t\t// 隔年 显示完整日期+时间\r\n\t\t\treturn this.dateFormat(new Date(shorttime),\"{Y}-{MM}-{DD} {A} {t}:{ii}\");\r\n\t\t}\r\n\t},\r\n\t\r\n\tparseNumber(num) {\r\n\t\treturn num < 10 ? \"0\" + num : num;\r\n\t},\r\n\t \r\n\tdateFormat(date, formatStr) {\r\n\t\tlet dateObj = {},\r\n\t\t\trStr = /\\{([^}]+)\\}/,\r\n\t\t\tmons = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\r\n\t\t \r\n\t\tdateObj[\"Y\"] = date.getFullYear();\r\n\t\tdateObj[\"M\"] = date.getMonth() + 1;\r\n\t\tdateObj[\"MM\"] = this.parseNumber(dateObj[\"M\"]);\r\n\t\tdateObj[\"Mon\"] = mons[dateObj['M'] - 1];\r\n\t\tdateObj[\"D\"] = date.getDate();\r\n\t\tdateObj[\"DD\"] = this.parseNumber(dateObj[\"D\"]);\r\n\t\tdateObj[\"h\"] = date.getHours();\r\n\t\tdateObj[\"hh\"] = this.parseNumber(dateObj[\"h\"]);\r\n\t\tdateObj[\"t\"] = dateObj[\"h\"] > 12 ? dateObj[\"h\"] - 12 : dateObj[\"h\"];\r\n\t\tdateObj[\"tt\"] = this.parseNumber(dateObj[\"t\"]);\r\n\t\tdateObj[\"A\"] = dateObj[\"h\"] > 12 ? '下午' : '上午';\r\n\t\tdateObj[\"i\"] = date.getMinutes();\r\n\t\tdateObj[\"ii\"] = this.parseNumber(dateObj[\"i\"]);\r\n\t\tdateObj[\"s\"] = date.getSeconds();\r\n\t\tdateObj[\"ss\"] = this.parseNumber(dateObj[\"s\"]);\r\n\t \r\n\t\twhile(rStr.test(formatStr)) {\r\n\t\t\tformatStr = formatStr.replace(rStr, dateObj[RegExp.$1]);\r\n\t\t}\r\n\t\treturn formatStr;\r\n\t},\r\n\t// 获取年龄\r\n\tgetAgeByBirthday(data){\r\n\t\tlet birthday=new Date(data.replace(/-/g, \"\\/\")); \r\n\t\tlet d=new Date(); \r\n\t\treturn d.getFullYear()-birthday.getFullYear()-((d.getMonth()<birthday.getMonth()|| d.getMonth()==birthday.getMonth() && d.getDate()<birthday.getDate())?1:0);\r\n\t}\r\n}"],"sourceRoot":""}